#!/usr/bin/perl
#
# WIRE
# This script generates tables to be used in LaTeX.
#
# Usage: run in one of the output directories generated by
#        wire-info-analysis --doc-statistics
#

use IO::File;
my	$dir	= `dirname $0`;	chomp $dir;
require "$dir/wire-report.lib";

use strict;
use warnings;

WIRE::init( "site" );

########################################################################
#
# Generate tables for the top N sites
# 
########################################################################

my $MAX_YEARS_TABLES    = WIRE::conf( "analysis/maxyears/tables" );
my $MAX_YEARS_GRAPHS    = WIRE::conf( "analysis/maxyears/graphs" );
my $MAX_AGE				= $MAX_YEARS_GRAPHS * 31536000;
my $EVERY				= WIRE::conf( "analysis/site/scatter-plot-every" );

WIRE::latex_table( 'site_summary', nopercent=>1 );

my @top_select =
	qw(count_doc raw_content_length
	in_degree out_degree
	internal_links
	sum_pagerank sum_hubrank sum_authrank
	siterank);

foreach my $code ( @top_select ) {
	WIRE::select_rows( 
		datafile	=> 'site_data.csv',
		outfile		=> "site_top_${code}.csv",
		colnames	=> [ 'sitename', $code ],
		sortdesc	=> $code,
		header		=> [ "Top sites by ${code}", $code ],
		cut			=> WIRE::conf( "analysis/site/site_top/cut" )
	);

	# Show the table
	WIRE::latex_table( "site_top_${code}",
		longtable=>1, nopercent=>1, nosort=>1 );
}

########################################################################
#
# Generate cumulative graphs of characteristics
# 
########################################################################

foreach my $code ( @top_select ) {

	# Generate a cumulative graph and table
	my $CUMULATIVE	= 0;
	my $COUNT		= 0;

	WIRE::select_rows(
		datafile	=> 'site_data.csv',
		outfile		=> "site_cumulative_${code}.csv",
		colnames	=> [ 'sitename', $code ],
		sortdesc	=> $code,
		parse_row	=> sub {
			my @line	= @_;
			if( defined $line[0] && $line[1] =~ /\d/ && $line[1] != 0 ) {
				$line[0]	= $COUNT	  += 1;
				$line[1]	= $CUMULATIVE += $line[1];
					return @line;
			} else {
				return ('','');
			}
		}
	);

	WIRE::gnuplot(
		datafile		=> "site_cumulative_${code}.csv",
		out				=> "site_cumulative_${code}",
		using			=> qq|(\$1/$COUNT):(\$2/$CUMULATIVE) "%lf,%lf,%lf"|,
		xlabel			=> "Fraction of sites",
		ylabel			=> "Cumulative ${code}",
		with			=> 'lines'
	);
};


########################################################################
#
# Scatter plots of pagerank and siterank,
# versus other characteristics
# 
########################################################################


my @columns_pagerank	=
	qw(count_doc_ok
	   age_oldest_page age_newest_page age_average_page
	   sum_pagerank siterank);

WIRE::select_rows(
	datafile	=> 'site_data.csv',
	outfile		=> 'site_pagerank.csv',
	colnames	=> \@columns_pagerank,
);

my @scatter_pagerank	= WIRE::all_pairs( @columns_pagerank );

while( my $code1    = shift @scatter_pagerank ) {
    my $col1    = shift @scatter_pagerank;
    my $code2   = shift @scatter_pagerank;
    my $col2    = shift @scatter_pagerank;

	my $logscale	=	( $code1 =~ /^age_/ ? "" : "x" ) .
						( $code2 =~ /^age_/ ? "" : "y" );

	my $range		=	( $code1 =~ /^age_/ ? "[0:$MAX_AGE]" : "[]" ) . " " . 
						( $code2 =~ /^age_/ ? "[0:$MAX_AGE]" : "[]" );

    WIRE::gnuplot(
        datafile        => "site_pagerank.csv",
        out             => "${code1}_${code2}",
        using           => qq|(\$${col1}):(\$${col2}) "%lf,%lf,%lf,%lf,%lf,%lf"|,
        xlabel          => $code1,
        ylabel          => $code2,
        logscale        => $logscale,
		every			=> $EVERY,
		range			=> $range,
        with            => 'points'
    );
}

########################################################################
#
# Scatter plot of link analysis
# including pagerank, authrank, hubrank
#
########################################################################

my @columns_link_score	=
	qw(in_degree out_degree
	   sum_pagerank sum_hubrank sum_authrank
	   siterank);

WIRE::select_rows(
	datafile	=> 'site_data.csv',
	outfile		=> 'site_link_score.csv',
	colnames	=> \@columns_link_score
);

my @scatter_link	= WIRE::all_pairs( @columns_link_score );

while( my $code1    = shift @scatter_link ) {
    my $col1    = shift @scatter_link;
    my $code2   = shift @scatter_link;
    my $col2    = shift @scatter_link;

    WIRE::gnuplot(
        datafile        => "site_link_score.csv",
        out             => "${code1}_${code2}",
        using           => qq|(\$${col1}):(\$${col2}) "%lf,%lf,%lf,%lf,%lf,%lf"|,
        xlabel          => $code1,
        ylabel          => $code2,
        logscale        => 'xy',
		every			=> $EVERY,
        with            => 'points'
    );
}

########################################################################
#
# Page age
# 
########################################################################

WIRE::latex_table( "site_age_newest_page_years",
	nosort=>1, maxcol1=>$MAX_YEARS_TABLES  );
WIRE::latex_table( "site_age_oldest_page_years",
	nosort=>1, maxcol1=>$MAX_YEARS_TABLES  );
WIRE::latex_table( "site_age_average_page_years",
	nosort=>1, maxcol1=>$MAX_YEARS_TABLES  );

my @graphs_date_months = (
	'site_age_oldest_page_months'	, 'Age of oldest page in months',
	'site_age_newest_page_months'	, 'Age of newest page in months',
	'site_age_average_page_months'	, 'Average page age in months'
);

while( my $code = shift( @graphs_date_months ) ) {
	my $title	= shift( @graphs_date_months );

	WIRE::gnuplot(
		datafile		=> "${code}.csv",
		out				=> $code,
		using			=> '($1):($3) "%lf,%lf,%lf"',
		xlabel			=> $title,
		ylabel			=> 'Fraction of sites',
		xtics			=> '12',
		range			=> "[0:" . ( $MAX_YEARS_GRAPHS * 12 ) . "]",
		with			=> 'lines'
	);
}

my @graphs_date_years = (
	'site_age_oldest_page_years'	, 'Age of oldest page in years',
	'site_age_newest_page_years'	, 'Age of newest page in years',
	'site_age_average_page_years'	, 'Average page age in years'
);

while( my $code = shift( @graphs_date_years ) ) {
	my $title	= shift( @graphs_date_years );

	WIRE::gnuplot(
		datafile		=> "${code}.csv",
		out				=> $code,
		using			=> '($1):($3) "%lf,%lf,%lf"',
		xlabel			=> $title,
		ylabel			=> 'Fraction of sites',
		xtics			=> '1',
		range			=> "[0:" . ( $MAX_YEARS_GRAPHS ) . "]",
		with			=> 'boxes'
	);
}


########################################################################
#
# Depth
# 
########################################################################

WIRE::latex_table( "site_max_depth", nosort=>1 );


WIRE::gnuplot(
	datafile		=> "site_max_depth.csv",
	out				=> "site_max_depth",
	using			=> '($1):($3) "%lf,%lf,%lf"',
	xtics			=> 1,
	range			=> '[1:]',
	xlabel			=> "Maximum depth",
	ylabel			=> 'Fraction of sites',
	with			=> 'boxes'
);


########################################################################
#
# Distribution of several scores
# 
########################################################################

my @graphs_loglog = (
	'site_raw_content_length_mb'	, 'Raw content length in MB',
	'site_count_doc'				, 'Number of documents',
	'site_in_degree'				, 'Number of external incoming links',
	'site_out_degree'				, 'Number of external outgoing links',
	'site_internal_links'			, 'Number of internal links',
	'site_internal_links_by_ndocs'	, 'Average of internal links per page',
	'sum_pagerank'					, 'Sum of pagerank',
	'sum_hubrank'					, 'Sum of hub score',
	'sum_authrank'					, 'Sum of authority score',
	'siterank'						, 'Siterank'
);

while( my $code = shift @graphs_loglog ) {
	my $title	= shift @graphs_loglog;
	my $fitmin	= WIRE::conf( "analysis/site/${code}/fitmin" );
	my $fitmax	= WIRE::conf( "analysis/site/${code}/fitmax" );
	my $range	= WIRE::conf( "analysis/site/${code}/range" );

	my $fit		= ( ($fitmin > 0) || ($fitmax > 0) );

	WIRE::gnuplot(
		datafile		=> "${code}.csv",
		out				=> $code,
		using			=> '($1):($3) "%lf,%lf,%lf"',
		xlabel			=> $title,
		ylabel			=> 'Fraction of sites',
		xtics			=> 'autofreq',
		logscale		=> 'xy',
		range			=> $range,
		fit				=> $fit,
		fitmin			=> $fitmin,
		fitmax			=> $fitmax,
		with			=> 'points'
	);
}

########################################################################
#
# Generate the summary table
# 
########################################################################


# Now everything

WIRE::latex_report();
