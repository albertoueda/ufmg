#!/usr/bin/perl
#
# WIRE
# This script generates tables to be used in LaTeX.
#
# Usage: run in one of the output directories generated by
#        wire-info-lang
#

use IO::File;
my	$dir	= `dirname $0`;	chomp $dir;
require "$dir/wire-report.lib";

use strict;
use warnings;

WIRE::init( "lang" );

########################################################################
#
# Generate the latex tables (documents)
# 
########################################################################

WIRE::latex_table( "summary",
	nopercent=>1, nosort=>1 );

# Hold top two languages
my $LANG1	= 0;	my $LANG1_CNT	= 0;	my $LANG1_NAME	= "";
my $LANG2	= 0;	my $LANG2_CNT	= 0;	my $LANG2_NAME	= "";

my $ROWNUM	= 0;

WIRE::latex_table( "count",
	parse_row => sub {
		my @line	= @_;

		# Structure: language,count,fraction
		if( $line[1] =~ /^\d+$/ ) {
			my $cnt	= $line[1];
			if( $cnt > $LANG1_CNT ) {
				# Rotate
				$LANG2		= $LANG1;
				$LANG2_CNT	= $LANG1_CNT;
				$LANG2_NAME	= $LANG1_NAME;

				$LANG1		= $ROWNUM;
				$LANG1_CNT	= $cnt;
				$LANG1_NAME	= $line[0];

			} elsif( $cnt > $LANG2_CNT ) {
				$LANG2		= $ROWNUM;
				$LANG2_CNT	= $cnt;
				$LANG2_NAME	= $line[0];
			}
		}

		$ROWNUM++;

		return @line;
	});

WIRE::select_rows(
	datafile	=> "by_depth.csv",
	outfile		=> "by_depth_toplang.csv",
	parse_row => sub {
		my @line	= @_;
		my @newline	= ();

		push( @newline, $line[0] );
		push( @newline, $line[-1 + ($LANG1 * 2)] );
		push( @newline, $line[     ($LANG1 * 2)] );
		push( @newline, $line[-1 + ($LANG2 * 2)] );
		push( @newline, $line[     ($LANG2 * 2)] );

		return @newline;
	}
);
	

WIRE::latex_table( "by_depth",
	nosort=>1, nopercent=>1,
	parse_row => sub {
		my @line	= @_;
		my @newline	= ();

		push( @newline, $line[0] );
		push( @newline, $line[-1 + ($LANG1 * 2)] );
		push( @newline, $line[     ($LANG1 * 2)] );
		push( @newline, $line[-1 + ($LANG2 * 2)] );
		push( @newline, $line[     ($LANG2 * 2)] );

		return @newline;
	});

my @langnames	= split( /\s+/, WIRE::conf( 'analysis/lang/stopwords' ) );

WIRE::gnuplot( 
	xlabel	=> 'Depth',
	ylabel	=> 'Fraction of identified pages',
	xtics	=> 1,
	ytics	=> 0.1,
	range	=> '[1:] [0:1.05]',
	out	=> 'by_depth_toplang',
	key			=> 'outside',
	datafile	=> [ 'by_depth_toplang.csv', 'by_depth_toplang.csv' ],
	using		=> [ '($1):($3) "%lf,%lf,%lf,%lf,%lf"',
					 '($1):($3+$5) "%lf,%lf,%lf,%lf,%lf"' ],
	title		=> [ $LANG1_NAME, $LANG2_NAME ],
	with		=> [ 'boxes lt 1 lw 2', 'boxes lt 3 lw 2' ] );

########################################################################
#
# Generate the graphs (documents)
# 
########################################################################

WIRE::latex_report();
