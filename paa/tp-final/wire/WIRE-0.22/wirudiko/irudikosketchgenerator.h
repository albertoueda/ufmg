// Class automatically generated by Dev-C++ New Class wizard

#ifndef IRUDIKOSKETCHGENERATOR_H
#define IRUDIKOSKETCHGENERATOR_H

#include <config.h>

#ifndef IRUDIKO_NEEDED_CLASSES
#define IRUDIKO_NEEDED_CLASSES
#include <iostream>
#include <string>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
#include <vector>
#include <list>
#endif

#include <sstream>
#include <fstream>
#include <math.h>

#define DEF_SHINGLING_W 4
#define DEF_PERMUTATION_NUM 175

#define SH_MIN_SELECTION 1
#define SH_MOD_SELECTION 2
#define SH_NONE_SELECTION 3

using namespace std;

typedef struct shingling {
        string* subseq;
	int frequency;
} shingling;

class IrudikoSketchGenerator
{
	public:
		// class constructor
		IrudikoSketchGenerator();
		IrudikoSketchGenerator(int);
		IrudikoSketchGenerator(int,int,int);
		// class destructor
		~IrudikoSketchGenerator();
		// functions
		int do_sketch(vector<string>, unsigned long*,int,char*);
		
		double resemblance(vector<unsigned long>);
		static double resemblance(unsigned long*, unsigned long*,int);
		void assign(int,int,int);
	private:
		int shingling_dim;
		vector<unsigned long> sketch;
		int sh_selmode;
		int sh_param;
		int dpn;
		
		vector<shingling> shingle(vector<string>);

		void rnd_init(long, long);
		long rnd_return(long);

		unsigned long hash_permute(unsigned long,int);
		unsigned long convert_shingle(shingling);

		int minShingles(list<unsigned long>&, unsigned int);
		int modShingles(list<unsigned long>&, unsigned int);
		int chooseModParam(int);

		list<unsigned long> get_ul_list(vector<shingling>&);
		/*rnd stuff*/
		long rnd_s1;
		long rnd_s2;
};

#endif // IRUDIKOSKETCHGENERATOR_H
