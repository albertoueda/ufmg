# Requires autoconf 2.5

AC_PREREQ(2.50)

# Process this file with autoconf to produce a configure script.
AC_INIT(WIRE,0.22)
AM_INIT_AUTOMAKE(WIRE,0.22)
AC_CONFIG_SRCDIR([lib/const.h])
AM_CONFIG_HEADER(config.h)

# Languages
AC_LANG(C)
AC_LANG(C++)

# Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

# For profiling only (remove in production releases)
#CXXFLAGS="-pg $CXXFLAGS"

# Docbook
# It's just rude to go over the net to build
XSLTPROC_FLAGS=--nonet
DOCBOOK_ROOT=
if test ! -f /etc/xml/catalog; then
        for i in /usr/share/sgml/docbook/stylesheet/xsl/nwalsh /usr/share/sgml/docbook/xsl-stylesheets /usr/share/xml/docbook/stylesheet/nwalsh/html;
        do
                if test -d "$i"; then
                        DOCBOOK_ROOT=$i
                fi
        done

        # Last resort - try net
        if test -z "$DOCBOOK_ROOT"; then
                XSLTPROC_FLAGS=
        fi
else
        XML_CATALOG=/etc/xml/catalog
        CAT_ENTRY_START='<!--'
        CAT_ENTRY_END='-->'
fi

AC_CHECK_PROG(XSLTPROC,xsltproc,xsltproc,)
XSLTPROC_WORKS=no
if test -n "$XSLTPROC"; then
        AC_MSG_CHECKING([whether xsltproc works])

        if test -n "$XML_CATALOG"; then
                DB_FILE="http://docbook.sourceforge.net/release/xsl/current/xhtml/docbook.xsl"
        else
                DB_FILE="$DOCBOOK_ROOT/docbook.xsl"
        fi

        $XSLTPROC $XSLTPROC_FLAGS $DB_FILE >/dev/null << END
<?xml version="1.0" encoding='ISO-8859-1'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<book id="test">
</book>
END
        if test "$?" = 0; then
                XSLTPROC_WORKS=yes
        fi
        AC_MSG_RESULT($XSLTPROC_WORKS)
fi
AM_CONDITIONAL(have_xsltproc, test "$XSLTPROC_WORKS" = "yes")

AC_SUBST(XML_CATALOG)
AC_SUBST(XSLTPROC_FLAGS)
AC_SUBST(DOCBOOK_ROOT)
AC_SUBST(CAT_ENTRY_START)
AC_SUBST(CAT_ENTRY_END)

# XML2 library
AC_PATH_PROG(XML2_CONFIG, xml2-config)
if test -z "$XML2_CONFIG"; then
	AC_MSG_ERROR([libxml2-devel or libxml2-dev required])
fi
LIBS="$LIBS `$XML2_CONFIG --libs`"
CXXFLAGS="$CXXFLAGS `$XML2_CONFIG --cflags`"

# Pthread library
AC_CHECK_LIB(pthread,pthread_create)
AC_CHECK_LIB(adns,adns_submit)

# Debug flags
CXXFLAGS="$CXXFLAGS -Wall --pedantic"

# Gnu source

# Large file support (this is linux-specific, couldn't get
# the macro AC_SYS_LARGEFILE to work well)
AC_DEFINE([_FILE_OFFSET_BITS], 64,
	[Define for large file support under linux.]) 
AC_DEFINE([_GNU_SOURCE], 1,
	[Define for large file support under linux.])
AC_DEFINE([_LARGEFILE64_SOURCE], 1,
	[Define for large file support under linux.])

# Checks for header files.
AC_HEADER_STDC
AC_HEADER_DIRENT
AC_CHECK_HEADERS([adns.h], [],
	[AC_MSG_ERROR([This software requires ADNS - Asynchronous DNS package provided by the packages adns-devel or libadns1-dev or something similar])])
#AC_CHECK_HEADERS([Magick++.h], [],
#	[AC_MSG_ERROR([This software requires ImageMagick])])
AC_CHECK_HEADERS([sys/utsname.h sys/poll.h syslog.h sys/select.h arpa/inet.h errno.h fcntl.h netdb.h netinet/in.h stdlib.h string.h sys/socket.h unistd.h locale.h iconv.h regex.h], [],
	[AC_MSG_ERROR([This header is needed to compile])])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_INLINE
AC_C_CONST
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_HEADER_STDBOOL

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_MKTIME
AC_FUNC_STAT
AC_FUNC_STRFTIME
AC_FUNC_LSTAT
AC_FUNC_CLOSEDIR_VOID 
AC_FUNC_ERROR_AT_LINE
AC_FUNC_FSEEKO
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([uname pow mkdir rmdir gethostname inet_ntoa memset strcasecmp strchr strerror strncasecmp strstr gettimeofday rint strspn], [],
	[AC_MSG_ERROR([This function is needed to compile])])

# Check in stdlib
AC_MSG_CHECKING([for strtol and strtoul in stdlib])
AC_HEADER_EGREP(strtol, stdlib.h, [],  [AC_MSG_ERROR([strtol not found in stdlib])] )
AC_HEADER_EGREP(strtoul, stdlib.h, [], [AC_MSG_ERROR([strtoul not found in stdlib])] )
AC_MSG_RESULT([ok])

# Output files

AC_OUTPUT(Makefile data/Makefile data/lang/Makefile data/tld/Makefile doc/Makefile doc/icn/Makefile lib/Makefile info/Makefile report/Makefile bot/Makefile test/Makefile search/Makefile universalchardet/Makefile wirudiko/Makefile)
